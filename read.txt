map[all:[@run clean go mod tidy @mkdir bin @run windows @run linux @echo Done!] build:[@env CGO_ENABLED 0 @env GOARCH amd64 go build -ldflags "-s -w -X 'main.SoftBuildTime={{.time.utc}}' -X 'main.SoftCommit={{.commit}}' -X 'main.SoftVersion={{.version}}'  -X 'main.SoftVersionCode={{.version_code}}'"] clean:[@rm bin] config:map[default:all proxy:] fmt:[gorgeous ./...] get_info:[@echo Get version info... @json https://1cp.org/gmake2.raw gmake2_version @json parse gmake2_version version version @json parse gmake2_version version_code version_code @val commit git log --pretty=format:'%h' -1] init:[@run get_info] linux:[@env GOOS linux @env CGO_ENABLED 0 @run linux_arm @run linux_arm64 @run linux_x86 @run linux_amd64] linux_amd64:[@env GOARCH amd64 go build -ldflags "-s -w -X 'main.SoftBuildTime={{.time.utc}}' -X 'main.SoftCommit={{.commit}}' -X 'main.SoftVersion={{.version}}' -X 'main.SoftVersionCode={{.version_code}}'" -o ./bin/gmake2_v{{.version}}_linux_amd64] linux_arm:[@env GOARCH arm go build -ldflags "-s -w -X 'main.SoftBuildTime={{.time.utc}}' -X 'main.SoftCommit={{.commit}}' -X 'main.SoftVersion={{.version}}' -X 'main.SoftVersionCode={{.version_code}}'" -o ./bin/gmake2_v{{.version}}_linux_arm] linux_arm64:[@env GOARCH arm64 go build -ldflags "-s -w -X 'main.SoftBuildTime={{.time.utc}}' -X 'main.SoftCommit={{.commit}}' -X 'main.SoftVersion={{.version}}' -X 'main.SoftVersionCode={{.version_code}}'" -o ./bin/gmake2_v{{.version}}_linux_arm64] linux_x86:[@env GOARCH 386 go build -ldflags "-s -w -X 'main.SoftBuildTime={{.time.utc}}' -X 'main.SoftCommit={{.commit}}' -X 'main.SoftVersion={{.version}}' -X 'main.SoftVersionCode={{.version_code}}'" -o ./bin/gmake2_v{{.version}}_linux_386] tag_test:[@echo {{.test1}} @echo {{.test2}}] tc:[@mkdir sbin @cp bin sbin] windows:[@env GOOS windows @env CGO_ENABLED 0 @run windows_amd64 @run windows_x86 @run windows_arm @run windows_arm64] windows_amd64:[@env GOARCH amd64 go build -ldflags "-s -w -X 'main.SoftBuildTime={{.time.utc}}' -X 'main.SoftCommit={{.commit}}' -X 'main.SoftVersion={{.version}}' -X 'main.SoftVersionCode={{.version_code}}'" -o ./bin/gmake2_v{{.version}}_windows_amd64.exe] windows_arm:[@env GOARCH arm go build -ldflags "-s -w -X 'main.SoftBuildTime={{.time.utc}}' -X 'main.SoftCommit={{.commit}}' -X 'main.SoftVersion={{.version}}' -X 'main.SoftVersionCode={{.version_code}}'" -o ./bin/gmake2_v{{.version}}_windows_arm.exe] windows_arm64:[@env GOARCH arm64 go build -ldflags "-s -w -X 'main.SoftBuildTime={{.time.utc}}' -X 'main.SoftCommit={{.commit}}' -X 'main.SoftVersion={{.version}}' -X 'main.SoftVersionCode={{.version_code}}'" -o ./bin/gmake2_v{{.version}}_windows_arm64.exe] windows_x86:[@env GOARCH 386 go build -ldflags "-s -w -X 'main.SoftBuildTime={{.time.utc}}' -X 'main.SoftCommit={{.commit}}' -X 'main.SoftVersion={{.version}}' -X 'main.SoftVersionCode={{.version_code}}'" -o ./bin/gmake2_v{{.version}}_windows_386.exe]]

map[all:@run clean
go mod tidy
@mkdir bin
@run windows
@run linux
@echo Done!
 build:@env CGO_ENABLED 0
@env GOARCH amd64
go build -ldflags "-s -w -X 'main.SoftBuildTime={{.time.utc}}' -X 'main.SoftCommit={{.commit}}' -X 'main.SoftVersion={{.version}}'  -X 'main.SoftVersionCode={{.version_code}}'"
 clean:@rm bin
 config:map[default:all] fmt:gorgeous ./...
 init:@run get_info
 linux:@env GOOS linux
@env CGO_ENABLED 0
@run linux_arm
@run linux_arm64
@run linux_x86
@run linux_amd64
 linux_arm:@env GOARCH arm
go build -ldflags "-s -w -X 'main.SoftBuildTime={{.time.utc}}' -X 'main.SoftCommit={{.commit}}' -X 'main.SoftVersion={{.version}}' -X 'main.SoftVersionCode={{.version_code}}'" -o ./bin/gmake2_v{{.version}}_linux_arm
 linux_arm64:@env GOARCH arm64
go build -ldflags "-s -w -X 'main.SoftBuildTime={{.time.utc}}' -X 'main.SoftCommit={{.commit}}' -X 'main.SoftVersion={{.version}}' -X 'main.SoftVersionCode={{.version_code}}'" -o ./bin/gmake2_v{{.version}}_linux_arm64 tag_test:@echo {{.test1}}
@echo {{.test2}}
 tc:@mkdir sbin
@cp bin sbin
]